import axios from 'axios';
import { Product } from '../models/Product';

type ProductApiResponse = {
  $id: string;
  $values: Product[];
};

// const API_URL = 'http://localhost:5065/api/products';
// Define the base API URL for product-related endpoints
const API_URL = `${import.meta.env.VITE_API_URL}/api/products`;

// Fetch all products from the backend API
// The response is expected to contain a $values property (common with .NET collections)
export const getAllProducts = async (): Promise<Product[]> => {
  const response = await axios.get<ProductApiResponse>(API_URL);
  return response.data.$values;
};

// Create a new product (POST request)
// The 'product' object should not include an 'id' â€” it will be generated by the backend
export const createProduct = async (product: Omit<Product, 'id'>): Promise<void> => {
  await axios.post(API_URL, product);
};

// Fetch a single product by its ID (GET request)
export const getProductById = async (id: number): Promise<Product> => {
  console.log(`${API_URL}/${id}`); // For debugging: show the exact URL being called
  const response = await axios.get<Product>(API_URL + `/${id}`);
  return response.data;
};

// Update an existing product (PUT request)
// Sends the full product object, including ID
export const updateProduct = async (id: number, product: Product): Promise<void> => {
  console.log(API_URL + `/${product.id}`); // Debug: show the URL
  await axios.put(`${API_URL}/${id}`, product);
};

// Delete a product by its ID (DELETE request)
export const deleteProduct = async (id: number): Promise<void> => {
  await axios.delete(`${API_URL}/${id}`);
};
